<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Squarism</title>
    <description>A tech blog about ruby, code, mongodb, golang and other stuff.</description>
    <link>http://squarism.com//</link>
    <atom:link href="http://squarism.com//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 29 Jul 2014 14:23:57 -0400</pubDate>
    <lastBuildDate>Tue, 29 Jul 2014 14:23:57 -0400</lastBuildDate>
    <generator>Jekyll v2.1.1</generator>
    
      <item>
        <title>Default DC Tech is Just Bad</title>
        <description>&lt;p&gt;&lt;img src=&quot;/uploads/2014/05/dc_capitol.jpg&quot; alt=&quot;dc_capitol&quot; width=&quot;500&quot; height=&quot;333&quot; class=&quot;aligncenter size-large wp-image-2137&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;em&gt;The opinions of this blog, but especially this post are mine and not my employers&#39;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;I&#39;m done with DC.  I need to archive the reasons why for myself.  I hope this serves as a free field trip to the DC area for anyone outside the beltway.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;blockquote&gt;
If you move to DC for the tech jobs, you are going to have to prune a lot of C-minus government work if you are good.  All the while, you will be paying for local benefits you are not taking advantage of.  This is the land of politics, military, intelligence, big government and lobbyists.  I tried to influence from within but now it&#39;s time for me to GTFO and move to Portland to try to find &quot;actual reality&quot; jobs.&lt;/blockquote&gt;
&lt;/p&gt;
&lt;h3&gt;I&#39;ve Been Here Too Long&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
I’ve lived in the DC area for 30 years.  I’ve been working for 14.  You might as well say I’ve lived around DC my whole life.  I went to School and College in Northern Virginia.  Northern Virginia and Maryland are part of the DC metropolitan area or what we would call the “DC Metro”.  This is a little bit confusing because if you say “The Metro” then you mean the subway.  I’ve traveled around and lived other places but you could say I’ve been here for a long time.  Recently, I’ve concluded that DC isn’t all bad but I’ve been here too long.  Also I feel like a slow learner in that it has taken me so long to realize these things.  I’m doing something about it and I’ll talk about that later.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;I&#39;ve done the DC government contracting circuit and I&#39;ve concluded that I&#39;ve seen enough.  It doesn&#39;t really matter what company you work for, it&#39;s the same project with the same people and the same problems.  However, a few years ago I found a small life raft.  It&#39;s a non-profit R&amp;amp;D shop and it&#39;s the best big tech company I&#39;ve found in DC.  It&#39;s not perfect but at the core of it is the non-profit bit.  It&#39;s &lt;strong&gt;not&lt;/strong&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Beltway_bandits&quot;&gt;Beltway Bandit&lt;/a&gt; time.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
Beltway bandit is a term for private companies located in or near Washington, D.C. whose major business is to provide consulting services to the US government.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At every company there&#39;s been good and bad parts.  I&#39;ve been happier lately because of my move to something non-typical but I&#39;m still done with the area.  The problems are very complicated but at the core of it are a few common patterns which I&#39;ll talk about later.  It&#39;s not the companies&#39; or the people&#39;s fault, it&#39;s the Beltway culture.  It&#39;s not micro, it&#39;s macro.  It&#39;s not the individuals, it&#39;s the whole.  It&#39;s &lt;a href=&quot;http://www.washingtonpost.com/opinions/review-of-mark-leibovichs-this-town/2013/07/03/5d882b8c-de9f-11e2-b94a-452948b95ca8_story.html&quot;&gt;This Town&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the same time, there are some start-ups and smaller consulting shops that I&#39;ve found very interesting.  &lt;a href=&quot;http://viget.com/&quot;&gt;Viget Labs&lt;/a&gt; is outside DC a little bit and they do cool stuff like Rails consulting, UX, frontend stuff, iOS (iirc) and even have meetups in their corporate office space.  But I think this is because they are bringing outside culture into DC not because they are native.  Default DC tech doesn&#39;t host meetups, have hack-a-thons or get valley culture right.  It&#39;s emulation.  I look at the lame attempts to adopt agile in recent years and it&#39;s just cargo culting.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.sei.cmu.edu/post.cfm/using-agile-effectively-in-dod-environments&quot;&gt;Using Agile Effectively in a DoD Environment&lt;/a&gt; - Give me a break.  It might as well say &quot;doing fast things in a slow environment&quot;.  It&#39;s a fight.  You have to fight the default.  If you listen to speakers at talks like this one, sometimes you will hear these exact words.  &lt;em&gt;&quot;We had to fight ... against the grain ... it was a struggle to ...&quot;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;No Good Advice Goes Unpunished&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Of course, there’s no silver bullet.  You can have a crappy job in a great company.  You can have a terrible boss in a great town.  You can have an awful commute in a great job with a great boss with awful pay.  There are permutations on all these factors and more.  Even more complicating is that one person’s experience, perspective and interaction with a position/job can be different from another person’s experience within the same situation.  So, please treat all of the following as retrospective and a personal time capsule that, as a bonus, might be useful or cathartic for someone other there in The Ether.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;It&#39;s also particularly hard to give advice about such a large topic.  I can&#39;t tell you how your experience is going to be in your work life just like I can&#39;t tell you how your experience is going to be in retirement or if you were going to college.  College is like some things for all people and different things to each person.&lt;/p&gt;
&lt;hr /&gt;

&lt;h2&gt;Story Time&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/uploads/2014/05/dc_old_mainframes-580x388.jpg&quot; alt=&quot;dc_old_mainframes&quot; width=&quot;580&quot; height=&quot;388&quot; class=&quot;aligncenter size-large wp-image-2140&quot; /&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;I have a lot of horror stories, some are mostly funny, some are mostly sad and some are a mix of funny/sad.  I&#39;ll try to focus on the funny/sad ones in that they are the most telling about the culture in DC.&lt;/p&gt;
&lt;h3&gt;The No Clue About Webapps Project&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
There was this project I sat near (was not in) and I heard all kinds of C.S. sins going on.  At some point I got the impression that they didn’t know what Subversion was (this was a while ago) or even CVS.  I said the phrase “check in” and the &lt;strong&gt;senior developer&lt;/strong&gt; didn’t know what I meant.  I mean, from a conceptual standpoint.  Jesus Christ, even Sharepoint uses this terminology.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;Anyway, at some point I got roped into installing local Oracle dev databases for everyone on Windows.  They didn&#39;t know how.  (it&#39;s just next, next, finish but whatever).  After that, I was asked to come to a big team meeting.  In the meeting the project manager starts off by apologizing for not being around for the last &lt;strong&gt;two years&lt;/strong&gt;.  He&#39;s been &quot;on-site&quot; (btw this is a typical problem with closed networks, you are completely cut-off from everyone and everything).  He says the customer is really mad because nothing has been done in the last &lt;strong&gt;four years&lt;/strong&gt;.  He starts going around the room and asking his team what programming language everyone knows (what).  People seem to know Java so the manager said, &lt;em&gt;&quot;ok we&#39;ll do it in Java&quot;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;So I&#39;m just sitting in there as the outsider with a box of popcorn enjoying the show because (little do they know) I&#39;ve already given my two weeks notice because this place isn&#39;t even close to being functional.  In this meeting they are trying to plan out the project in panic mode, so they review what needs to be done.  They break out the old project and demo it.  Basically, they need to port it from some old language like Cold Fusion to Java (which they just decided after 2-4 years, wow).&lt;/p&gt;
&lt;p&gt;The demo is an interactive map of the U.S.  To me it looks like you can click around the map like an HTML imagemap.  But they start planning out the project like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ok, there&#39;s 50 states.&lt;/li&gt;
&lt;li&gt;It looks like you can drill down into about 4-5 counties per state.&lt;/li&gt;
&lt;li&gt;That means we have 300-ish maps we need to port.&lt;/li&gt;
&lt;li&gt;Kevin, you take 80 maps.  Stacey, you take 120 maps ...&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;I&#39;m sitting there looking at the URL and what&#39;s actually happening is this:&lt;br /&gt;
&lt;code&gt;http://legacyapp/map.cfm?state=1&amp;amp;county=20&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So I say, &quot;Um.  It looks to me like you guys have one thing to port.  The map.cfm page is just swapping IDs out.  There&#39;s probably some geometry file somewhere that you could reuse or some database data somewhere that swaps out the images or imagemaps or something.&quot;&lt;/p&gt;
&lt;p&gt;Suddenly the room goes quiet.  No one knows who I am.  I&#39;m not on the team.  I had never seen the legacy app before.  Some of them hadn&#39;t seen the app they were supposed to be working on either.  They just stared at me while the project manager tried to get me to join the project to help.  &quot;(to me) Wait, what project are you on right now?&quot;&lt;/p&gt;
&lt;p&gt;As much as I would have liked to just say &quot;I&#39;m quitting, GG&quot; in front of everyone, I didn&#39;t really want to bring the team down.  So I just told him in private I had already given my two weeks notice after everyone left.  He said, &quot;darn&quot;.  Because he wanted me to fix and advise on this crazy train.  But I was already leaving (phew).&lt;/p&gt;
&lt;p&gt;This was a 4 year web porting project where people didn&#39;t know about URL parameters.  Wow, just wow.&lt;/p&gt;
&lt;h3&gt;The Porn Guy&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
I was tasked with inventory of memory or something of desktops (this was a while ago when I did sysadmin stuff).  I walked around cubes in Kentucky (I forget where) and bugged people while they were working, “Hi.  Can I look at your computer for a second?  Thanks.” etc.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;This one guy sat in a cube (his back facing a common hallway) and he was surfing porn.  I cleared my throat and waited for him to be embarrassed or shut down the windows or apologize.  I don&#39;t know what the hell I expected, &quot;this is awful&quot; was what I was thinking.  He kind of was startled and said, &quot;oh!&quot; in a surprised voice and closed an IE window.  But there were more IE windows of porn underneath.  So he said, &quot;oh!&quot; in a surprised voice and closed an IE window.  But there were more IE windows of porn underneath.  This happened over and over and it was hilarious at the time.&lt;/p&gt;
&lt;p&gt;Looking back, I probably should have reported him and I feel awful about this story since I&#39;ve been reading #YesAllWomen hashtags.  Sigh.&lt;/p&gt;
&lt;p&gt;Ok, maybe that was in Kentucky.  But I remember there was this guy downtown that built a cardboard screen so he could watch porn at work.  Sad.  Granted, I&#39;ve been involved in firing someone for this behavior (and harassment) at a commercial company.  It&#39;s more an ick story I guess.  Why in the **** do people do this at work anyway?&lt;/p&gt;
&lt;h3&gt;The Sleeping Boss&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
In a similar desktop inventory task, I went downtown one time.  I walked up and down a long cube row.  It kind of looked like a Viking ship.  The boss was at the head of the office and all the workers were lined up on either side of a main isle.  I remember coming to this one guy who was playing a Playstation (ps1) on a TV that he brought in.  He had a VCR too.  His cube shelves were stacked with VHS tapes.  I asked him what his job title was.  He didn’t know.  I asked him what his job was.  He didn’t know.  I asked him where he got the TV and Playstation from and he said he brought it in from home.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;Wow!  So here&#39;s a guy who is telling a stranger with a clipboard that he doesn&#39;t know what his job is.  I went to the boss at the head of the ship because I needed to inventory his PC (although I should have started yelling about tax payer money) and here&#39;s this guy snoring away in his chair.  Literally sleeping in his little private office.  I knocked really loud and woke him up.  I received no apology.  He just said &quot;what huh&quot; and then answered my questions.&lt;/p&gt;
&lt;p&gt;Unapologetic isn&#39;t alarming in that I deserve and apology.  It&#39;s alarming because no one cares.  Nothing&#39;s going to happen to them.  They don&#39;t feel shame or embarrassment because there&#39;s no force of fitness like natural selection that would enable evolution pruning.&lt;/p&gt;
&lt;hr /&gt;

&lt;h2&gt;Great Stories&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
There’s no black and white.  I’m probably anti-DC right now because I’m trying to move.  As painful as it is to admit, I’ve spent a lot of time here and &lt;em&gt;haven’t died from emo&lt;/em&gt; so it can’t be that bad.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I sat on Bush&#39;s desk and set up Cheney&#39;s Wife&#39;s computer.  That was nuts.  My personal politics aside, it was cool to help people that were going to the White House.&lt;/li&gt;
&lt;li&gt;I got to travel and see the country including Alaska which was awesome.&lt;/li&gt;
&lt;li&gt;I helped some people catch some child molesters (may they burn in hell).  There&#39;s a lot of work in DC that isn&#39;t about catching terrorists and other ethereal goals.&lt;/li&gt;
&lt;li&gt;Once, someone asked me if I wanted to work on a quantum computer project.  They were serious.&lt;/li&gt;
&lt;li&gt;I&#39;ve met some people that worked on The Internet.  Like, the actual Internet.  Everyday people have had historic roles.  A lot of them are humble.  I&#39;m not sure the valley does that all the time.  Who knows.&lt;/li&gt;
&lt;li&gt;Was able to guide some (not all) projects away from rocks.  If my goal was to influence from within, I did.&lt;/li&gt;
&lt;li&gt;You can work on big systems.  Clusters, huge storage, large concurrent queues, events, streams, billions of rows, zillions of things.&lt;/li&gt;
&lt;li&gt;I learned Unix, Java and had time to learn Rails/Ruby and play with Python, Node, Scala, Golang and countless libraries and databases.  There&#39;s time to breathe.&lt;/li&gt;
&lt;li&gt;#dctech is a good community.  AgileTechDC is a good conference.  But I think they are the outsiders to the default and that relationship should be flipped in a perfect world.&lt;/li&gt;
&lt;li&gt;I met chinese, spanish, korean and other native language speakers just because DC is so diverse.  I&#39;ve learned a lot about languages just by osmosis.&lt;/li&gt;
&lt;li&gt;I met the love of my life here.&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;h2&gt;The Good Stuff about DC&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/uploads/2014/05/dc_arlington-580x435.png&quot; alt=&quot;dc_arlington&quot; width=&quot;580&quot; height=&quot;435&quot; class=&quot;aligncenter size-large wp-image-2138&quot; /&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;No burnout.  If you work a normal DC job, you can go to work and not burn out.  9-5 is very, very normal.  No one talks about Sustainability like they do in the valley, you don&#39;t need to.  Normal hours are the norm.  This also means though that organizing hackathons are both unknown and foreign.&lt;/li&gt;
&lt;li&gt;There are lots of smart people in DC.  DC has the highest literacy rate in the country.  People want real answers for policy and practice that has real work to be done.  If you are involved in practical problems, there&#39;s a chance to work on national issues, crises and programs that make a difference without selling out.  Sort of.&lt;/li&gt;
&lt;li&gt;DC has a lot of things to go see.  I saw Stevie Wonder live with Michelle Obama in the audience at the Kennedy Center.  Stuff like this is amazing.&lt;/li&gt;
&lt;li&gt;Seeing The Capitol when you go downtown never gets old.&lt;/li&gt;
&lt;li&gt;Schools are great.  There&#39;s this high school called Thomas Jefferson Science and Technology.  I think they&#39;re like #7 in the country.  Amazing kids go there.  In general almost everyone goes to college.  I think my graduating class was like 98% went to college or something (maybe times have changed since the 90s, lol).  Depends on your opinion of college and whether that matters.  In-state universities (VA/MD) are as good as you need them to be, there are a ton to choose from.&lt;/li&gt;
&lt;li&gt;Crime is low in the &#39;burbs.  So many people have clearances around here and money is good so everyone&#39;s a straight-edge (sort of).&lt;/li&gt;
&lt;li&gt;You can work on national problems.  Sometimes a little flag waves in my head and I see a real democracy.  Sometimes not so much.&lt;/li&gt;
&lt;li&gt;You can get a job anytime you want.  A job.  Maybe not a good job.  Just a job.&lt;/li&gt;
&lt;li&gt;If you have a clearance, you can &lt;strong&gt;really, really, really&lt;/strong&gt; get a job anytime you want.&lt;/li&gt;
&lt;li&gt;You will probably earn a lot of money.  Two of the richest average income per household counties are in N.VA.  I could care less at this point but this is true.  Almost everyone is doing very well.  Sometimes it&#39;s sickening.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Downtown is awesome.  Arlington VA is full of life and young hip people.  If you are in your early twenties (or feel like you are), live in Arlington (Clarendon/Ballston/Rosslyn).  If you are rich, live in Georgetown or near Capitol Hill.&lt;/li&gt;
&lt;li&gt;Nats baseball, going to see a game.  Fun times, nice park.&lt;/li&gt;
&lt;li&gt;The Washington Post is a good paper.  Local Jazz radio is good.&lt;/li&gt;
&lt;li&gt;The formal arts scene (jazz, ballet, concerts, musicals, plays, displays, etc) is great.  Big names come through because it&#39;s a big town.&lt;/li&gt;&lt;br /&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;h2&gt;The Bad&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/uploads/2014/05/dc_traffic-580x386.jpg&quot; alt=&quot;dc_traffic&quot; width=&quot;580&quot; height=&quot;386&quot; class=&quot;aligncenter size-large wp-image-2136&quot; /&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;h3&gt;Traffic&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
I would swear very offensively here but I’m trying to cut back on my bad language.  I can’t describe how bad the traffic is.  Above is a picture of what you can expect on a Saturday (or maybe not, who knows!).  My wife and I exclaim in horror at what we find when we go out.  “Traffic on a Sunday.  Wow.”  The rush hour is insane.  You will plan around the traffic.  You will not take jobs because of the commute.  You will find people who hate downtown.  You will find recruiters who ask you where you live FIRST because they know you will never take a job where your commute is one hour if you are any good.  And some  people would kill for a 1 hour commute!  I know people that commute from Leesburg downtown and it’s like 2 hours each  way for them every day.  What.  How can people even.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;h3&gt;Weird Cobweb Jobs&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Infinite &lt;a href=&quot;http://www.washingtonpost.com/jobs/JobSearchServlet?location=&amp;amp;keyword=Sharepoint&amp;amp;localRadio=0&quot;&gt;Sharepoint Administrator&lt;/a&gt; jobs.  What.  How can “Sharepoint Architect” even be a job title.  Bad Government work is so hard to prune and avoid.  There are really weird cobwebs out there.  When you live here, you are competing with these salaries.  They keep home prices up.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;h3&gt;Sprawl&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
The Metro ride out to suburbia is pretty awful.  You probably can’t afford to live downtown or close in.  “Normal” houses cost $600-700k (there are places so much more) in the suburbs.  It’s insanity.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;You can spend one million dollars on a house anywhere.  I think what is unique about DC is the average cost and wealth is very high compared to the rest of the country.&lt;/p&gt;
&lt;h3&gt;Un-Culture&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Redskins won’t change their name, that’s status-quo in full effect.  If status-quo aggravates you, don’t come here.  Being so close to B.S. politics and you still can’t change it.  Most people are here for the jobs so they really don’t care about you.  East coast hardness.  Most people don’t say hi.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;h2&gt;Repeating Themes&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
I could probably go on with The Good vs The Bad.  It’s just too much to list.  I’m trying to keep this readable but I wanted to list out some recurring themes I’ve seen specifically within the tech industry in DC.  This is not company specific.  I’ve seen it over and over again.  Worse yet, if you talk about this to someone who’s near the Beltway,  they will know what you are talking about.  So please don’t associate my employer or my past employers with this.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Butts-in-seats contracting.  People make money off other people working.  You can make bank if you know the right people and get a fat contract.  Hire bad people, doesn&#39;t matter, a lot of government people won&#39;t know the difference.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Take a core sample, government folks aren&#39;t technical enough.  Fine --&amp;gt; Hire tech.  Except they don&#39;t know what they hired.  Whoops.  This is subtle but it causes sort of a chain reaction of problems on a project.  They don&#39;t know enough to ask the right questions.  What is really needed is what Google already does: only promote ex-technical people to managers and have very few managers.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Bureaucracies serve the needs of bureaucracies.  The needs of an individual are not served.  Case-in-point: The idea of a developer specifying and ordering his own workstation is comically alien.  You might as well ask for your desk to be hung upside down.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Security issues.  Even if you aren&#39;t in the cloak-and-dagger space, chances are you will be near it and that means a truck-load of issues that will decay your soul.  Imagine no Internet at work.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;No designers.  Designers and web developers live on their portfolio.  No portfolio = no work history.  Most government sponsors won&#39;t let you take screenshots.  So you have to design in your spare time?  For the love of it?   I&#39;m not this type of person but I know a few people that have moved out of the area for this reason.  What this means to me is that most UIs you work with are total pants.  Total pants!  UX?  Ha.  No one even knows what that means.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Politics matter.  Congressional BS will impact you.  I have friends who have lost &quot;stable&quot; jobs because of some really weird contract expiring or the &quot;wrong type&quot; of money being in the &quot;wrong bucket&quot;.  This space is insane.  I&#39;ve worked on one proposal before and I never want to do it again.  Politics also means word-smithing.  People are &lt;strong&gt;super careful&lt;/strong&gt; about saying the right thing using the right words.  A lot of the time this means corporate speak.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Modified agile.  Software craftsmanship people are moving on from the term agile because it&#39;s been rendered meaningless.  This decay is happening here.&lt;/li&gt;&lt;br /&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;h2&gt;So I&#39;m Moving&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/uploads/2014/05/mt_hood-580x386.jpg&quot; alt=&quot;mt_hood&quot; width=&quot;580&quot; height=&quot;386&quot; class=&quot;aligncenter size-large wp-image-2135&quot; /&gt;&lt;br /&gt;
I gave it 14 years but I’m moving to Portland.  Hope springs eternal in the human breast.  I understand that nothing is perfect.  Things like the &lt;a href=&quot;http://calagator.org/&quot;&gt;Calagator event calendar&lt;/a&gt; look absolutely amazing to me.  Look at this schedule!&amp;lt;/p&amp;gt;
&lt;code&gt;May 29 2014  PDX Weekly Hackathon&lt;br /&gt;
May 29 2014  Bruce Schneier: &quot;Internet, Security, and Power&quot;&lt;br /&gt;
May 30 2014  Ruby Programmers Informal Co-Working&lt;br /&gt;
May 30 2014  Python Web Development with Flask&lt;br /&gt;
...&lt;br /&gt;
May 31 2014  Scrum/Agile Workshop by Agile Coach/Trainer at Intel&lt;br /&gt;
...&lt;br /&gt;
Jun 2 2014   Triage-a-Thon at Puppet Labs&lt;br /&gt;
Jun 3 2014   Google Glass versus the COMPETITION&lt;br /&gt;
Jun 5 2014   PDXNode presentation night&lt;br /&gt;
....&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Yes, there are similar events in DC (Bruce is probably talking here).  There&#39;s a lot of cool stuff happening in an Open Government mailing list called &lt;a href=&quot;https://groups.google.com/forum/#!forum/sunlightlabs&quot;&gt;Sunlight Labs&lt;/a&gt;.  I wrote &lt;a href=&quot;http://squarism.com/2013/06/09/rails-dev-shops-in-washington-dc/&quot;&gt;a blog post&lt;/a&gt; attempting to enumerate awesome shops in DC (I picked Rails as a starting point).  It wasn&#39;t as long as I had hoped.  &lt;a href=&quot;http://istrategylabs.com/team/peter-corbett/&quot;&gt;Peter Corbett&lt;/a&gt; is an awesome guy.  I&#39;d seriously suggest networking with him if you get the chance.&lt;/p&gt;
&lt;p&gt;I hope in a year I&#39;m blogging about myself in a startup, lean company or more forward-leaning shop.  Or maybe I&#39;ll have created an art installation with Golang or something.  We&#39;ll see!  :)&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Jun 2014 14:30:14 -0400</pubDate>
        <link>http://squarism.com//2014/06/06/default-dc-tech-is-just-bad/</link>
        <guid isPermaLink="true">http://squarism.com//2014/06/06/default-dc-tech-is-just-bad/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Passion</title>
        <description>&lt;p&gt;On a &lt;a href=&quot;http://rubyrogues.com/144-rr-passion/&quot;&gt;Ruby Rogues podcast about Passion&lt;/a&gt;, Avdi continued to  enlighten and entertain me with his insights.  I&#39;ve really been enjoying his speaking style and  voice lately through tapas and talks.  If he reads this, I hope he understands I don&#39;t disagree with what he is saying; I thought he would enjoy a related story.&lt;/p&gt;
&lt;p&gt;Honestly, this topic is so massive I don&#39;t think I can really offer too much more than the Rogues did on the podcast so I encourage you to &lt;a href=&quot;http://rubyrogues.com/144-rr-passion/&quot;&gt;listen to the episode yourself&lt;/a&gt;.  It has almost nothing to do with programming or Ruby.  I feel that philosophies and stories about passion are so close to the difficult and inevitable goal of &quot;master yourself&quot;, which is both complicated and personal, I can just barely approach the topic and then a rat&#39;s nest of anecdotes and advice explodes all around us.&lt;/p&gt;
&lt;p&gt;With that context laid out, here are a few stories.&lt;/p&gt;
&lt;p&gt;On the podcast, the rogues talked about two PhDs that would scream at each other in the office on a daily basis.  Avdi said that he&#39;s had similar experiences personally and said:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
I&#39;ve gotten upset with people for their code because it was so stupid. I&#39;ve gotten angry and I&#39;ve said mean things. And you know what? All those instances, those were wastes of my passion. That was wasted emotional energy.&lt;br /&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I know what he&#39;s trying to say.  There are moments when this is true.  In fact, I would say in the  majority of cases it&#39;s better to just &quot;get over it&quot; (a challenge itself).  Most of the time I try to run in this mode.  Most of the time I fail.  It&#39;s especially hard when you feel like you need to &quot;represent&quot;.&lt;/p&gt;
&lt;h2&gt;Story Time&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;
Here was my situation.  A &quot;lead architect&quot; I sat with in a shared office room was named &quot;Bradly&quot;.  Bradly was not his real name but it will help you remember that Bradly was Bad.  He was a lead  architect of our project but he couldn&#39;t code and he couldn&#39;t build servers.  He had some very  narrow skills in a certain problem domain but those skills weren&#39;t general enough for him to be an &quot;architect&quot;.  He got the title/position through a previous successful project.  I&#39;m just setting up the scenario here.&lt;/p&gt;
&lt;p&gt;We had an application in the middle-tier, doesn&#39;t really matter what it did except that it talks  to a database.  His bright idea was to install a database on every node to reduce network traffic.  We were vendor-locked into Oracle.  We had at least 10 servers that this design decision would impact.  We really needed 1 database but we would be purchasing 10.  I was the only one on the  project that could or would argue against the decision.&lt;/p&gt;
&lt;p&gt;It was very simple from my point of view:&lt;br /&gt;
- Three tier architecture is front, middle, back.  Normally that&#39;s web, app server, database.&lt;br /&gt;
- No one installs databases on their app servers to reduce network traffic.&lt;br /&gt;
- We didn&#39;t know that network traffic is the (or a) bottleneck.&lt;br /&gt;
- Oracle database licenses sell for about $20k + $?? annual support.&lt;br /&gt;
- We were going to have a failover site so this single decision was on the order of $400k.&lt;br /&gt;
- Running 10 databases is hard.  Replication is hard.  Oracle RDBMS does not &quot;want&quot; this layout.&lt;/p&gt;
&lt;p&gt;Bradly&#39;s argument was:&lt;br /&gt;
- Networks (gigabit, brand new awesome switches) are slow.&lt;br /&gt;
- Local databases would avoid the network.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;Just to be clear, this is a simplified version of what Bradly wanted.&lt;br /&gt;
&lt;img src=&quot;/uploads/2014/05/tier_architecture_one.png&quot; alt=&quot;tier_architecture_one&quot; width=&quot;403&quot; height=&quot;364&quot; class=&quot;aligncenter size-full wp-image-2119&quot; /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;This is what I wanted.&lt;br /&gt;
&lt;img src=&quot;/uploads/2014/05/tier_architecture_two.png&quot; alt=&quot;tier_architecture_two&quot; width=&quot;403&quot; height=&quot;304&quot; class=&quot;aligncenter size-large wp-image-2120&quot; /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;I did my best to remain calm but this is the represent problem.  I felt compelled to bring the “outside world” to his mind.  I knew that no one did it like this.  And I imagined a stadium of my peers agreeing with me if they only knew what he was saying.  “What would the Internet think?  Oh my god!  They would laugh!  Imagine our embarrassment!  What kind of project is this?!” etc.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;I tried to approach it logically.  I showed vendor diagrams and documentation of example architectures from the very vendor product we were using and no diagrams showed locally installed databases.  Eventually it came down to his argument: &quot;I own the architecture, I&#39;m the architect.&quot;&lt;/p&gt;
&lt;p&gt;In this case, I was very passionate.  I was furious.  I had to represent the outside world.  I couldn&#39;t let it go.  I had to teach him that no one does it this way.  I had to represent.&lt;/p&gt;
&lt;h2&gt;Drama&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;
We eventually got into the only screaming argument I&#39;ve ever had in my 14-ish year career.  It was bad.  We didn&#39;t talk anymore.  We split the team.  We pitched our designs to management separately.  Management was trying to side with one of us since money was involved.  I moved offices so I didn&#39;t have to sit with him anymore.  It was no fun, it was a bad situation.&lt;/p&gt;
&lt;p&gt;In the end, he moved onto to other projects and I was able to influence the project back to normalcy.  When new developers joined the project, some artifacts of this debate would surface (like an old diagram).  Someone with three-tier experience would say &quot;what the hell is this&quot; and I&#39;d have to explain the whole thing.  In those rare cases I felt righteous but to this day I feel awful about the whole story.  My working relationship was ruined with him and I hate the memory of that job just because of experiences like this one and others.&lt;/p&gt;
&lt;p&gt;I&#39;d rather teach than win.  But he wasn&#39;t there to be a teacher and I wasn&#39;t given that role or power.  When some people go to work they optimize for their career.  They start off the day wanting to perform a job, move up and at the very least maintain the power they have.  Because this is the best they&#39;ve ever been in their career.&lt;/p&gt;
&lt;p&gt;When I wake up, I optimize for experience.  I start off the day ready to learn, improve and at the very least make myself or other people better at what we spend our time doing.  Because this is the very worst I&#39;ll ever be in my career.&lt;/p&gt;
&lt;p&gt;So Avdi, in this and other things, I hear you.&lt;/p&gt;
</description>
        <pubDate>Mon, 19 May 2014 12:04:58 -0400</pubDate>
        <link>http://squarism.com//2014/05/19/passion/</link>
        <guid isPermaLink="true">http://squarism.com//2014/05/19/passion/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>DRY up Methods with Ruby Blocks</title>
        <description>&lt;p&gt;&lt;img src=&quot;/uploads/2013/09/pixel-ribbon_redolution.png&quot; alt=&quot;pixel-ribbon_redolution&quot; width=&quot;576&quot; height=&quot;24&quot; class=&quot;aligncenter size-full wp-image-2108&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Let&#39;s do something terrible by hand.  First, here&#39;s our data.  It comes from a database.&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
db_results = [&lt;br /&gt;
  { id: 1, login: &#39;mjay&#39;, roles: [&#39;user&#39;], projects: [&#39;muffins&#39;] },&lt;br /&gt;
  { id: 2, login: &#39;rroke&#39;, roles: [&#39;admin&#39;, &#39;user&#39;], projects: [&#39;security&#39;] },&lt;br /&gt;
  { id: 3, login: &#39;tpain&#39;, roles: [&#39;user&#39;], projects: [&#39;muffins&#39;] },&lt;br /&gt;
  { id: 4, login: &#39;ghaz&#39;, roles: [&#39;admin&#39;, &#39;user&#39;], projects: [&#39;muffins&#39;, &#39;cakes&#39;] },&lt;br /&gt;
  { id: 5, login: &#39;bbarker&#39;, roles: [&#39;user&#39;], projects: [&#39;pies&#39;] }&lt;br /&gt;
]&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;Now when working with these people, we probably could get away with doing something like this for a while:&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
# find all admins&lt;br /&gt;
admins = db_results.select {|user| user[:roles].include? &#39;admin&#39; }&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;Which is fine.  Until you want to find out what people are on the Muffin Project:&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
# find all people working on the muffins project&lt;br /&gt;
people_on_muffins = db_results.select {|user| user[:projects].include? &#39;muffins&#39; }&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;But as you keep working, you might be getting a feeling of deja-vu.  The two methods above are very similar.  You might be inspired by other Ruby libraries which give you a tiny DSL or at least allow you to pass blocks into methods to be more expressive.&lt;/p&gt;
&lt;h2&gt;The Smell&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
Here’s the complete code smelly example.&amp;lt;/p&amp;gt;
&amp;lt;pre lang=&quot;ruby&quot;&amp;gt;
db_results = [&lt;br /&gt;
  { id: 1, login: ‘mjay’, roles: [‘user’], projects: [‘muffins’] },&lt;br /&gt;
  { id: 2, login: ‘rroke’, roles: [‘admin’, ‘user’], projects: [‘security’] },&lt;br /&gt;
  { id: 3, login: ‘tpain’, roles: [‘user’], projects: [‘muffins’] },&lt;br /&gt;
  { id: 4, login: ‘ghaz’, roles: [‘admin’, ‘user’], projects: [‘muffins’, ‘cakes’] },&lt;br /&gt;
  { id: 5, login: ‘bbarker’, roles: [‘user’], projects: [‘pies’] },&lt;br /&gt;
]&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;admins = db_results.select {|user| user[:roles].include? &#39;admin&#39; }&lt;br /&gt;
people_on_muffins = db_results.select {|user| user[:projects].include? &#39;muffins&#39; }&lt;br /&gt;
meeting = admins + people_on_muffins&lt;br /&gt;
meeting_ids = meeting.collect {|user| user[:login] }.uniq&lt;/p&gt;
&lt;p&gt;puts meeting_ids&lt;br /&gt;
# =&amp;gt; rroke ghaz mjay tpain&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;We&#39;re having a meeting between the admins and people who are on the Muffin Project.  The only person not matching these rules in this case is Bob Barker (bbarker).  He must be busy enjoying retirement eating pie, who knows.&lt;/p&gt;
&lt;h2&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
Let’s take a look at Faraday.  Faraday uses blocks to great effect to communicate intent just like most libraries in Ruby.  In Faraday, this is how a HTTP POST is done using Faraday:&amp;lt;/p&amp;gt;
&amp;lt;pre lang=&quot;ruby&quot;&amp;gt;
conn.post do |req|&lt;br /&gt;
  req.url ‘/nigiri’&lt;br /&gt;
  req.headers[‘Content-Type’] = ‘application/json’&lt;br /&gt;
  req.body = ‘{ “name”: “Unagi” }’&lt;br /&gt;
end&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
This is kind of nice!  You can get more than one thing done at a time and it doesn’t require a lot of temporary variables.  Let’s see if we can use blocks like this.  We’ll get to blocks in a miniute.  Let’s first refactor a little bit first.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;h2&gt;The Fix&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
There’s a certain similarity between the two selects.  We really want to get “admins” and “project people” all together, so let’s just do that.  We’ll create two methods that essentially replace the instance methods but can be used in the future for other rules.  We’ll call them .with_roles and .with_projects.&amp;lt;/p&amp;gt;
&amp;lt;pre lang=&quot;ruby&quot;&amp;gt;
def with_roles(results, role)&lt;br /&gt;
  results.select {|user| user[:roles].include? role }&lt;br /&gt;
end&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;def with_projects(results, project)&lt;br /&gt;
  results.select {|user| user[:projects].include? project }&lt;br /&gt;
end&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;Next, we&#39;ll create a method that takes a block.&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
def user_ids(results, &amp;amp;block)&lt;br /&gt;
  rows = yield block&lt;br /&gt;
  ids = rows.collect {|user| user[:login] } if rows&lt;br /&gt;
  ids.uniq&lt;br /&gt;
end&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;The &amp;amp;block argument and yield block is optional.  You could write this as:&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
 def user_ids(results)&lt;br /&gt;
   rows = results.dup&lt;br /&gt;
   rows = yield if block_given?&lt;br /&gt;
   ids = rows.collect {|user| user[:login] }&lt;br /&gt;
   ids.uniq&lt;br /&gt;
 end&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;
But in that case, the block is optional, so you’ll want to check for block_given?.  For this example, it’s easier for us to require a block to make this a shorter post … err, well I guess it’s longer now.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;In any event, this method&#39;s job is to filter results (users) with whatever code is passed in.  Then it uniques the collected array because user IDs are assumed here to be unique.  Finally, it returns just user_ids like it&#39;s name implies.&lt;/p&gt;
&lt;p&gt;The usage of this user_ids method that takes a block ends up reading very well.&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
admins = user_ids(db_results) do&lt;br /&gt;
  with_roles(db_results, &#39;admin&#39;) +&lt;br /&gt;
  with_projects(db_results, &#39;muffins&#39;)&lt;br /&gt;
end
&lt;p&gt;puts admins&lt;br /&gt;
# =&amp;gt; rroke ghaz mjay tpain&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;Here&#39;s the completed, less smelly example.&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
db_results = [&lt;br /&gt;
  { id: 1, login: &#39;mjay&#39;, roles: [&#39;user&#39;], projects: [&#39;muffins&#39;] },&lt;br /&gt;
  { id: 2, login: &#39;rroke&#39;, roles: [&#39;admin&#39;, &#39;user&#39;], projects: [&#39;security&#39;] },&lt;br /&gt;
  { id: 3, login: &#39;tpain&#39;, roles: [&#39;user&#39;], projects: [&#39;muffins&#39;] },&lt;br /&gt;
  { id: 4, login: &#39;ghaz&#39;, roles: [&#39;admin&#39;, &#39;user&#39;], projects: [&#39;muffins&#39;, &#39;cakes&#39;] },&lt;br /&gt;
  { id: 5, login: &#39;bbarker&#39;, roles: [&#39;user&#39;], projects: [&#39;pies&#39;] }&lt;br /&gt;
]
&lt;p&gt;def with_roles(results, role)&lt;br /&gt;
  results.select {|user| user[:roles].include? role }&lt;br /&gt;
end&lt;/p&gt;
&lt;p&gt;def with_projects(results, project)&lt;br /&gt;
  results.select {|user| user[:projects].include? project }&lt;br /&gt;
end&lt;/p&gt;
&lt;p&gt;def user_ids(results)&lt;br /&gt;
  rows = results.dup&lt;br /&gt;
  rows = yield if block_given?&lt;br /&gt;
  ids = rows.collect {|user| user[:login] }&lt;br /&gt;
  ids.uniq&lt;br /&gt;
end&lt;/p&gt;
&lt;p&gt;admins = user_ids(db_results) do&lt;br /&gt;
  with_roles(db_results, &#39;admin&#39;) +&lt;br /&gt;
  with_projects(db_results, &#39;muffins&#39;)&lt;br /&gt;
end&lt;/p&gt;
&lt;p&gt;puts admins&lt;br /&gt;
# =&amp;gt; rroke ghaz mjay tpain&lt;/p&gt;
&lt;p&gt;# usage without a block, showing that it&#39;s a little more flexible&lt;br /&gt;
# puts user_ids(db_results)&lt;br /&gt;
# =&amp;gt; returns everyone because no filtering block was passed&lt;br /&gt;
&lt;/p&gt;
&lt;h2&gt;Wrap Up&lt;/h2&gt;
&lt;p&gt;This is pretty procedural.  I&#39;ll leave it to you to put it into a class, maybe add something better than a &quot;plus&quot; operator to combine the user list together.  Maybe a UserList abstraction class could help get away from hashes too.&lt;/p&gt;
&lt;p&gt;I like going down these paths because you end up with more expressive code that is flexible to change.  At the same time, little hints of DSLs come out when using blocks to this effect.  This is starting down the path of a Ruby DSL. I&#39;ll be posting about that pretty soon.&lt;/p&gt;
&lt;/pre&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 13 Sep 2013 20:07:20 -0400</pubDate>
        <link>http://squarism.com//2013/09/13/dry-methods-with-ruby-blocks/</link>
        <guid isPermaLink="true">http://squarism.com//2013/09/13/dry-methods-with-ruby-blocks/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Problems with &quot;The Cloud&quot;</title>
        <description>&lt;p&gt;&lt;img src=&quot;/uploads/2013/08/pixel-ribbon_grass.png&quot; alt=&quot;pixel-ribbon_grass&quot; width=&quot;576&quot; height=&quot;24&quot; class=&quot;aligncenter size-full wp-image-2091&quot; /&gt;&lt;br /&gt;
I&#39;ve been thinking about the problems with The Cloud outside it being a raging buzzword.  It really comes down to &lt;em&gt;Control and Connectivity&lt;/em&gt;.  That&#39;s the problem but allow me to elaborate.&lt;/p&gt;
&lt;h2&gt;Control&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
Google Wave is a great example of control loss.  If you really put a lot of energy, stock and trust into Google Wave as a content store for your team, brain or idea then you might feel deflated by its cancellation.  Even as an idea and a disruptive alternative to E-mail or SMTP crappiness, it’s a shame it had to die.  So what now?  Wait for an open source version?  Host your own?&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;The idea was to &quot;put it in the cloud&quot; and forget about it.  But when the cloud changes outside your control, you have to be aware of it again.  Now you really have to think about the cloud itself.  It&#39;s not such a vague black box which is what the cloud diagram really means.&lt;/p&gt;
&lt;p&gt;Another example of control is YouTube.  I use YouTube favorites as a persistent list.  I see a cool video, I favorite it and I feel like I sort of own it, or at least it&#39;s in a list that I can refer to later.  But take a look at this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/uploads/2013/08/youtube_whoops.png&quot; alt=&quot;youtube_whoops&quot; width=&quot;532&quot; height=&quot;296&quot; class=&quot;aligncenter size-full wp-image-2089&quot; /&gt;&lt;/p&gt;
&lt;p&gt;What were those things?  Who knows!  Now, I have to think about &quot;the cloud&quot; again.  These are temporary videos that someone else ultimately controls.  I&#39;m just adding references to a list.  I don&#39;t own the clips.  They are transient.  They are ephemeral.  I&#39;m out of control again.  I don&#39;t even know what media I&#39;ve lost.  Do I mitigate again?  Do I suck down a list periodically and do a diff?&lt;/p&gt;
&lt;h2&gt;Connectivity&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
I recently got a Roku box for my TV.  It’s a great box.  During registration it does a bunch of sign up and account creation.  But it doesn’t work without uPNP enabled on the router.  This isn’t even a connectivity outage thing, it’s a connectivity assumption that I have a certain kind of firewall that can’t have holes punched in it … or that I’m not capable of punching the holes myself.  I don’t even really know why Roku does this uPNP thing.  All I know is, it wouldn’t even finish the setup until I made this change.  Now here’s a device that doesn’t work without connectivity or a &lt;strong&gt;clear path to connectivity&lt;/strong&gt;.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;Think about how picky that is for a second.  If it&#39;s not picky then think about how many technical barriers there are to pure or uniform Internet.  Everyone brings their own quilted environment and it&#39;s a mess.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Aug 2013 18:23:06 -0400</pubDate>
        <link>http://squarism.com//2013/08/27/problems-with-the-cloud/</link>
        <guid isPermaLink="true">http://squarism.com//2013/08/27/problems-with-the-cloud/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>IPv6 Spike</title>
        <description>&lt;p&gt;A spike is when you play around with something and then throw it away for the purposes of learning.  So, let&#39;s play around with IPv6.  I had read a little bit about it but essentially my working experience with IPv6 was nothing except for disabling it.  Let&#39;s learn some stuff!&lt;/p&gt;
&lt;p&gt;I&#39;m going to skip over all the history of IPv6 and assume that you agree with me and think that this is important and relevant to the future of the Internet.&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
First, build 4 Ubuntu VMs.  I’m using 13.04 but any current Linux distro should work, just the packages and paths will change.  I found the best way is to build a simple VM and then clone it 3 more times (in Fusion this is copy/paste and resetting the MAC address).  You’ll need four machines to simulate a local network.  You won’t need any network hardware and VMware will be able to simulate everything we need.  You can actually do this whole experiment on one real box (cool stuff)!&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;The goal of this spike is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build 4 VMs&lt;/li&gt;
&lt;li&gt;Make a router, a web server, a dns server and a client&lt;/li&gt;
&lt;li&gt;Hit a web page between two network boundaries over IPv6 only&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;h2&gt;Super practical IPv6 primer&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
Addressing is WEIRD.  That’s really what I wanted to spike on.  Getting comfortable with the addressing length, hexadecimal and understanding the addressing layout.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;In IPv4, a network segment might look like this: &lt;code&gt;   10.0.0.0/24&lt;/code&gt;&lt;br /&gt;
So a box with an IP on that network might be this: &lt;code&gt; ip: 10.0.0.136  netmask:255.255.255.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;IPv6 is a lot different.  Private addresses don&#39;t start with 192.168., 172. or 10.  Private addresses start with fc00 (from what I&#39;ve read).  So I made up two network segments called&lt;br /&gt;
&lt;code&gt;fc00:deed:d34d:b33f&lt;br /&gt;
fc00:deee:deee:deee&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;But that&#39;s only 4 sets of hex.  IPv6 addresses have 8 sets of 4 hex bytes like this:&lt;/p&gt;
&lt;pre highlight=&quot;false&quot;&gt;
nnnn:nnnn:nnnn:nnnn:hhhh:hhhh:hhhh:hhhh&lt;br /&gt;
(where n&#39;s are the network parts and h&#39;s are the host parts in a /64)&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;So let&#39;s configure a box with an ip.  Our boxes are named after onomatopoeias (boing, wap, rawr and piff).  Boing&#39;s address is &quot;dot&quot; 10.&lt;br /&gt;
&lt;code&gt;boing: fc00:deed:d34d:b33f::10/64&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So there&#39;s a box that&#39;s configured with an IP.  Notice the double colons.  That just means it fills in the zeros between.  It&#39;s shorthand.  The /64 is the network segment.  Like in ipv4 192.168.0.1/24 is a common private ip.  The /24 is out of 32.  So it means X.X.X.Y where Y is the host part and X.X.X is the network part.  So 192.168.0.* is the network and .1 is the host.  In IPv6 it&#39;s /64 out of a total /128.&lt;/p&gt;
&lt;p&gt;So my private address space is just like an IPv4 private range.  I&#39;m assigning this IPv6 space and I have 18 trillion private address for my ONE SUBNET.  For a router to work, I need two subnets.  So now I have 36 TRILLION free private addresses.  O_o&lt;/p&gt;
&lt;h2&gt;Address Configuration&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
I’m using ipv4 just for remote admin and installing things through apt.  So you’ll have to add another ip to your vm’s network card.  Ubuntu does this in the file /etc/network/interfaces.  Here’s an example.&amp;lt;/p&amp;gt;
&amp;lt;pre highlight=&quot;false&quot;&amp;gt;
boing - dns (10.0.0.137)&lt;br /&gt;
	/etc/network/interfaces&lt;br /&gt;
	  iface eth0 inet6 static&lt;br /&gt;
	  	address fc00:deed:d34d:b33f::10&lt;br /&gt;
	  	netmask 64&lt;br /&gt;
	  	gateway fc00:deed:d34d:b33f::1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
If you type ifconfig or &lt;code&gt;ip addr&lt;/code&gt; you will see that it has two IPs now.  One IPv4 and one IPv6 address.  We’re not quite done.  I drew a picture of the network layout and you’ll have to configure all the VMs like this.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/uploads/2013/07/ipv6_lab.png&quot; alt=&quot;ipv6_lab&quot; width=&quot;539&quot; height=&quot;401&quot; class=&quot;aligncenter size-full wp-image-2028&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Router Configuration&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
This is really easy.  You just need the Rawr box to forward IPv6 packets like a router but not like a firewall.  So Linux can do that will a simple kernel switch.  But first, you’ll need to add a second network card in VMWare.  So:&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shutdown rawr&lt;/li&gt;
&lt;li&gt;Add a second network card&lt;/li&gt;
&lt;li&gt;Boot rawr&lt;/li&gt;
&lt;li&gt;Edit /etc/sysctl.conf, change net.ipv6.conf.all.forwarding = 1&lt;/li&gt;
&lt;li&gt;Run sysctl -p&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;
Routing through rawr should work at this point.  For example, from piff, you should be able to ping boing through ipv6 even though they aren’t on the same network segment.  Use ping6 and traceroute6 to sanity check.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;h2&gt;DNS Configuration&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
Boing is our DNS server so let’s make some changes.  First, apt-get install bind9.  Then edit these files below.  I configured a temporary subdomain on squarism.com called ipv6.squarism.com but this can be anything you want.&amp;lt;/p&amp;gt;
&amp;lt;pre title=&quot;/etc/bind/named.conf.local&quot; toolbar=&quot;always&quot;&amp;gt;
zone “ipv6.squarism.com” {&lt;br /&gt;
        type master;&lt;br /&gt;
        file “/etc/bind/db.ipv6.squarism.com”;&lt;br /&gt;
};&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;zone &quot;f.3.3.b.d.4.3.d.d.e.e.d.0.0.c.f.ip6.arpa&quot; {&lt;br /&gt;
        type master;&lt;br /&gt;
        file &quot;/etc/bind/db.fc00_deed_d34d_b33f&quot;;&lt;br /&gt;
};&lt;br /&gt;
&lt;br /&gt;
Notice that the reverse zone (ip6.arpa) is super annoying to type out.  It needs to be the reverse bytes (afaik).&lt;/p&gt;
&lt;pre title=&quot;/etc/bind/db.ipv6.squarism.com&quot; toolbar=&quot;always&quot;&gt;
$TTL 2D ; zone default 2 days&lt;br /&gt;
$ORIGIN ipv6.squarism.com.
&lt;p&gt;@                       IN SOA  ns1.ipv6.squarism.com. hostmaster.squarism.com. (&lt;br /&gt;
                                2013062702      ; serial&lt;br /&gt;
                                3H              ; refresh&lt;br /&gt;
                                15M             ; retry&lt;br /&gt;
                                1W              ; expire&lt;br /&gt;
                                1D              ; minimum&lt;br /&gt;
                        )&lt;/p&gt;
&lt;p&gt;                        IN      NS      ns1.ipv6.squarism.com.&lt;/p&gt;
&lt;p&gt;ns1                             AAAA    fc00:deed:d34d:b33f::10  ; dns server&lt;/p&gt;
&lt;p&gt;; hosts&lt;br /&gt;
boing                   IN      AAAA    fc00:deed:d34d:b33f::10&lt;br /&gt;
wap                     IN      AAAA    fc00:deed:d34d:b33f::11&lt;br /&gt;
rawr                    IN      AAAA    fc00:deed:d34d:b33f::1&lt;br /&gt;
piff                    IN      AAAA    fc00:deee:deee:deee::6&lt;/p&gt;
&lt;p&gt;; aliases&lt;br /&gt;
www                     IN      CNAME   wap&lt;br /&gt;
&lt;br /&gt;
Here we&#39;re using the AAAA records for IPv6.  In IPv4 these would be A records.  Bind has supported AAAA records for a long time.  CNAME records don&#39;t change.  Notice that you could easily run a DNS server that serves both stacks.&lt;/p&gt;
&lt;pre title=&quot;/etc/bind/db.fc00_deed_d34d_b33f&quot; toolbar=&quot;always&quot;&gt;
; fc00:deed:d34d:b33f::/64&lt;br /&gt;
$TTL 1h ; Default TTL&lt;br /&gt;
@       IN      SOA     ns1.ipv6.squarism.com.  hostmaster.squarism.com. (&lt;br /&gt;
        2013072801      ; serial&lt;br /&gt;
        1h              ; slave refresh interval&lt;br /&gt;
        15m             ; slave retry interval&lt;br /&gt;
        1w              ; slave copy expire time&lt;br /&gt;
        1h              ; NXDOMAIN cache time&lt;br /&gt;
        )
&lt;p&gt;;&lt;br /&gt;
; domain name servers&lt;br /&gt;
;&lt;br /&gt;
@       IN      NS      ns1.ipv6.squarism.com.&lt;/p&gt;
&lt;p&gt;; IPv6 PTR entries&lt;br /&gt;
0.1.0.0.0.0.0.0.0.0.0.0.0.0.f.3.3.b.d.4.3.d.d.e.e.d.0.0.c.f.ip6.arpa.    IN    PTR    boing.ipv6.squarism.com.&lt;br /&gt;
1.1.0.0.0.0.0.0.0.0.0.0.0.0.f.3.3.b.d.4.3.d.d.e.e.d.0.0.c.f.ip6.arpa.    IN    PTR    wap.ipv6.squarism.com.&lt;br /&gt;
1.0.0.0.0.0.0.0.0.0.0.0.0.0.f.3.3.b.d.4.3.d.d.e.e.d.0.0.c.f.ip6.arpa.    IN    PTR    rawr.ipv6.squarism.com.&lt;br /&gt;
6.0.0.0.0.0.0.0.0.0.0.0.0.0.e.e.e.d.e.e.e.d.e.e.e.d.0.0.c.f.ip6.arpa.    IN    PTR    piff.ipv6.squarism.com.&lt;br /&gt;
&lt;br /&gt;
I used a reverse zone generator &lt;a href=&quot;http://rdns6.com/zone&quot;&gt;at rdns6.com&lt;/a&gt; for this last time.  It&#39;s amazingly annoying to type out.  I&#39;m not sure if there&#39;s a more convenient form that could be used.&lt;/p&gt;
&lt;p&gt;Restart bind: &lt;code&gt;sudo services bind9 restart&lt;/code&gt;  Check the logs in /var/log/syslog for any `named:` errors.  I had a few typos I had to chase down.  DNS can be tricky to set up so take your time.&lt;/p&gt;
&lt;h2&gt;See DNS working&lt;/h2&gt;&lt;br /&gt;
Ok, let&#39;s take a quick break from this infinite configuration and see how we are doing so far.  At this point we should have routing and DNS working.  So that means that Piff should be able to ping a DNS name and it should work.
&lt;p&gt;But first, we need to tell Piff and all the other boxes to use our new dns server.  Edit /etc/network/interfaces again and add&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br /&gt;
dns-search ipv6.squarism.com&lt;br /&gt;
dns-nameservers fc00:deed:d34d:b33f::10&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example, your eth0 block will look like this&lt;/p&gt;
&lt;pre lang=&quot;diff&quot;&gt;
# The primary network interface&lt;br /&gt;
auto eth0&lt;br /&gt;
iface eth0 inet dhcp&lt;br /&gt;
iface eth0 inet6 static&lt;br /&gt;
	address fc00:deed:d34d:b33f::11&lt;br /&gt;
	netmask 64&lt;br /&gt;
	gateway fc00:deed:d34d:b33f::1&lt;br /&gt;
	dns-search ipv6.squarism.com&lt;br /&gt;
	dns-nameservers fc00:deed:d34d:b33f::10&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;Restart networking.  Even if your VMs are running DHCP (they are by default), we&#39;re just adding a DNS server to the static IPv6 address.  In other Linux distros, this file will be different (sry).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br /&gt;
piff:~$ ping6 www.ipv6.squarism.com&lt;br /&gt;
PING www.ipv6.squarism.com(fc00:deed:d34d:b33f::11) 56 data bytes&lt;br /&gt;
64 bytes from fc00:deed:d34d:b33f::11: icmp_seq=1 ttl=64 time=1.12 ms&lt;br /&gt;
64 bytes from fc00:deed:d34d:b33f::11: icmp_seq=2 ttl=64 time=0.553 ms&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok great.  DNS and routing are working.  Now we are ready for the final part.&lt;/p&gt;
&lt;h2&gt;Web Server Configuration&lt;/h2&gt;&lt;br /&gt;
Get dependencies installed on Wap (the web server).&lt;br /&gt;
&lt;code&gt;aptitude install zlib1g-dev libssl-dev libpcre3-dev&lt;/code&gt;
&lt;p&gt;We need ipv6 support built in and I&#39;m not sure if the OS packages are going to come with it out of the box.  Installing nginx is easy.  So let&#39;s download nginx, configure, compile.&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
# download latest stable and untar ...&lt;br /&gt;
./configure --with-ipv6 --prefix=/opt/nginx&lt;br /&gt;
make install&lt;br /&gt;
cd /opt/nginx&lt;br /&gt;
vi conf/nginx.conf&lt;br /&gt;
  # change this line&lt;br /&gt;
  listen       [::]:80 default ipv6only=on;&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Start nginx:&lt;br /&gt;
&lt;code&gt;/opt/nginx/sbin/nginx -c /opt/nginx/conf/nginx.conf&lt;/code&gt;&lt;br /&gt;
Normally, I&#39;d write a init.d script here but whatever.  You can stop nginx like this:&lt;br /&gt;
&lt;code&gt;sudo /opt/nginx/sbin/nginx -s stop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sanity check:&lt;br /&gt;
&lt;code&gt;netstat -nlp | grep nginx&lt;br /&gt;
tcp6   0  0 :::80  :::*  LISTEN  24618/nginx.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Let&#39;s create a dummy web page on Wap (the nginx box).  We&#39;ll test this page in the next section.&lt;/p&gt;
&lt;pre lang=&quot;html&quot; title=&quot;/opt/nginx/html/ipv6.html&quot; toolbar=&quot;always&quot;&gt;
  &lt;html&gt;
&lt;h1&gt;This is only viewable over ipv6!&lt;/h1&gt;&lt;br /&gt;
  &lt;/html&gt;&lt;br /&gt;
&lt;/pre&gt;
&lt;h2&gt;End to end test&lt;/h2&gt;&lt;br /&gt;
Ok, everything is set up.  So let&#39;s see it work end to end.  Our goal was to hit an IPv6 web server through DNS and a router.  
&lt;p&gt;Here you can see I&#39;m pinging the webserver from the web client (piff -&amp;gt; wap).&lt;/p&gt;
&lt;pre highlight=&quot;false&quot;&gt;
piff:~$ ping 10.0.0.139&lt;br /&gt;
PING 10.0.0.139 (10.0.0.139) 56(84) bytes of data.&lt;br /&gt;
64 bytes from 10.0.0.139: icmp_req=1 ttl=64 time=0.341 ms&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;IPv4 is routable directly because of vmware.  But IPv6 traffic is split, the client isn&#39;t on the same IPv6 segment as the web server.  So I can ping directly with IPv4.  So that&#39;s our IPv4 sanity test but not why we did all this.&lt;/p&gt;
&lt;p&gt;You can see when I try to hit that ipv6.html test page we created earlier it won&#39;t work.&lt;/p&gt;
&lt;pre highlight=&quot;false&quot;&gt;
piff:~$ curl http://10.0.0.139&lt;br /&gt;
curl: (7) Failed connect to 10.0.0.139:80; Connection refused&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;It actually says connection refused and this makes sense if you look at the netstat information from Wap.  It&#39;s not listening on 0.0.0.0:80, it&#39;s listening on :::80.  Crazy!&lt;/p&gt;
&lt;p&gt;If I use ipv6 (curl needs some special settings for the URL)&lt;/p&gt;
&lt;pre highlight=&quot;false&quot;&gt;
piff:~$ curl -g http://[fc00:deed:d34d:b33f::11]/ipv6.html&lt;br /&gt;
  &lt;html&gt;
&lt;h1&gt;This is only viewable over ipv6!&lt;/h1&gt;&lt;br /&gt;
  &lt;/html&gt;&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;And ipv6 DNS is working.&lt;/p&gt;
&lt;pre highlight=&quot;false&quot;&gt;
piff:~$ curl -g http://wap.ipv6.squarism.com/ipv6.html&lt;br /&gt;
&lt;html&gt;
&lt;h1&gt;This is only viewable over ipv6!&lt;/h1&gt;&lt;br /&gt;
&lt;/html&gt;&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;You can see it&#39;s going through a router:&lt;/p&gt;
&lt;pre highlight=&quot;false&quot;&gt;
piff:~$ traceroute6 wap.ipv6.squarism.com&lt;br /&gt;
traceroute to wap.ipv6.squarism.com (fc00:deed:d34d:b33f::11)&lt;br /&gt;
from fc00:deee:deee:deee::6, 30 hops max, 24 byte packets&lt;br /&gt;
 1  fc00:deee:deee:deee::1 (fc00:deee:deee:deee::1)  0.739 ms  0.651 ms  0.185 ms&lt;br /&gt;
 2  fc00:deed:d34d:b33f::11 (fc00:deed:d34d:b33f::11)  1.266 ms  0.278 ms  0.262 ms&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;Wget works too&lt;/p&gt;
&lt;pre highlight=&quot;false&quot;&gt;
piff:~$ wget -O- http://wap.ipv6.squarism.com/ipv6.html&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;Ssh has no special flags, it just works.&lt;/p&gt;
&lt;pre highlight=&quot;false&quot;&gt;
piff:~$ ssh wap.ipv6.squarism.com&lt;br /&gt;
The authenticity of host &#39;wap.ipv6.squarism.com (fc00:deed:d34d:b33f::11)&#39; can&#39;t be established.&lt;br /&gt;
ECDSA key fingerprint is -----.&lt;br /&gt;
Are you sure you want to continue connecting (yes/no)? yes&lt;br /&gt;
&lt;/pre&gt;
&lt;h2&gt;Victory Lap&lt;/h2&gt;&lt;br /&gt;
Even firefox works.&lt;br /&gt;
&lt;img src=&quot;/uploads/2013/07/ipv6_firefox_dns-580x303.png&quot; alt=&quot;ipv6_firefox_dns&quot; width=&quot;580&quot; height=&quot;303&quot; class=&quot;aligncenter size-large wp-image-2056&quot; /&gt;
&lt;p&gt;Just to prove that this isn&#39;t IPv4, let&#39;s use the weird numerical URL format for the IP.&lt;br /&gt;
&lt;img src=&quot;/uploads/2013/07/ipv6_firefox_ip.png&quot; alt=&quot;ipv6_firefox_ip&quot; width=&quot;620&quot; height=&quot;293&quot; class=&quot;aligncenter size-full wp-image-2057&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Well this was a fun spike and I feel like I understand IPv6 a whole lot more and it doesn&#39;t strike fear into my heart to think about big scary addressing.  I think the key is to actually use DNS instead of fudging it with typing manual addresses or managing crazy hosts files.  It should be interesting to see when ISPs and cloud providers start offering serious options for IPv6.&lt;/p&gt;
&lt;/pre&gt;&lt;/pre&gt;
</description>
        <pubDate>Sun, 28 Jul 2013 14:08:41 -0400</pubDate>
        <link>http://squarism.com//2013/07/28/ipv6-spike/</link>
        <guid isPermaLink="true">http://squarism.com//2013/07/28/ipv6-spike/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>The Best Way to Read CSV in Ruby</title>
        <description>&lt;p&gt;&lt;img src=&quot;/uploads/2013/06/pixel-ribbon_company_profile.png&quot; alt=&quot;pixel-ribbon_company_profile&quot; width=&quot;576&quot; height=&quot;24&quot; class=&quot;aligncenter size-full wp-image-2014&quot; /&gt;&lt;/p&gt;
&lt;p&gt;CSV is awful.  CSV isn&#39;t well formed.  It isn&#39;t hard to use because it&#39;s bloated and slow.  CSV is hard to use because it&#39;s just a dumb data format.  However, sometimes all you have is stupid data and &lt;em&gt;who cares, let&#39;s do this thing and blot out the memories&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I assume you know how to use the CSV module that&#39;s built into Ruby.  It&#39;s pretty easy.  You just read a file in and you get some 2D array back.  It usually comes out pretty horrible with long methods and little room for nice abstractions.&lt;/p&gt;
&lt;p&gt;So what if you want to polish it up a little bit?  Maybe you aren&#39;t just going to kludge this thing again and hate yourself later?  What if you aren&#39;t just going to load this into a database?  What if you want to do some quick CSV analysis but at the same time make it come out sort of readable?&lt;/p&gt;
&lt;p&gt;Let&#39;s take a look at an abstraction layer and see how we could write a CSV loader for a guest list.  We&#39;re going to have a dinner party and evite gave us a crappy CSV dump of who&#39;s responded so far.  Well, it&#39;s what we have.  But how many people are coming and how many groups aren&#39;t allergic to peanuts?  We want to know how many peanut M&amp;amp;Ms to buy.&lt;/p&gt;
&lt;p&gt;Here&#39;s our data:&lt;/p&gt;
&lt;pre&gt;
Name, Plus, RSVP&#39;d, Peanut Allergies&lt;br /&gt;
Tom DeLuise, 1, No, Yes&lt;br /&gt;
Mel Brooks, 3, Yes, Yes&lt;br /&gt;
Lewis Black, 5, Yes, No&lt;br /&gt;
Jon Stewart, 3, Yes, Yes&lt;br /&gt;
Jim Gaffigan, 0, Yes, No&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;Supermodel is pretty old and I like it a lot but it hasn&#39;t been updated in a while and has some open pull requests.  I took at look at some alternatives but it didn&#39;t work out.&lt;br /&gt;
- ActiveModel from Rails 3 is hard to make generic&lt;br /&gt;
- ActiveModel::Model from Rails 4 is a great upgrade from 3.x.  You can  make anything look like a database object but it still doesn&#39;t have the concept of a collection.  So now I have to make an array variable called table?  This is weird.&lt;br /&gt;
- Sequel has a nice interface to an in-memory sqlite3 database.  It&#39;s probably the most &#39;real&#39; that I found but it requires you to do a CREATE TABLE statement even for your in-memory database.&lt;/p&gt;
&lt;p&gt;None of these alternatives above are bad but let&#39;s take a look and see how nice we can get it with Supermodel.&lt;/p&gt;
&lt;p&gt;First, we are going to use a supermodel fork so that we automatically get rails 3.2.13 instead of 3.0.x.  Create a project folder and a Gemfile file:&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
source &quot;https://rubygems.org&quot;
&lt;p&gt;gem &#39;supermodel&#39;, :git =&amp;gt; &#39;https://github.com/amdtech/supermodel.git&#39;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;Run bundle.&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
require &#39;csv&#39;&lt;br /&gt;
require &#39;supermodel&#39;
&lt;p&gt;class Guest &amp;lt; SuperModel::Base&lt;br /&gt;
  validates_presence_of :name&lt;br /&gt;
end&lt;/p&gt;
&lt;p&gt;class CSVImporter&lt;br /&gt;
  def import filename&lt;br /&gt;
    csv = CSV.read(File.open(filename))&lt;br /&gt;
    remove_headers csv&lt;/p&gt;
&lt;p&gt;    csv.each do |row|&lt;br /&gt;
      Guest.create attributes_for(row)&lt;br /&gt;
    end&lt;br /&gt;
  end&lt;/p&gt;
&lt;p&gt;  # i know i&#39;ve gotten this to work more elegantly&lt;br /&gt;
  def remove_headers csv&lt;br /&gt;
    csv.delete_at 0&lt;br /&gt;
  end&lt;/p&gt;
&lt;p&gt;  def attributes_for row&lt;br /&gt;
    row = strip_row!(row)&lt;br /&gt;
    {&lt;br /&gt;
      name:             row[0],&lt;br /&gt;
      plus:             row[1].to_i,&lt;br /&gt;
      rsvp:             row[2] == &quot;Yes&quot;,&lt;br /&gt;
      peanut_allergies: row[3] == &quot;Yes&quot;&lt;br /&gt;
    }&lt;br /&gt;
  end&lt;/p&gt;
&lt;p&gt;  def strip_row!(row)&lt;br /&gt;
    row.collect {|cell| cell.strip }&lt;br /&gt;
  end&lt;br /&gt;
end&lt;/p&gt;
&lt;p&gt;CSVImporter.new.import(&#39;guests.csv&#39;)&lt;/p&gt;
&lt;p&gt;puts &quot;How many people are coming?&quot;&lt;br /&gt;
puts Guest.all.reduce(0) {|sum, guest| sum += guest.plus + 1}&lt;/p&gt;
&lt;p&gt;peanut_eating_guests = Guest.all.select {|guest| guest.peanut_allergies == false }&lt;br /&gt;
peanut_guest_count = peanut_eating_guests.inject(0) {|sum, guest| sum += guest.plus + 1 }&lt;br /&gt;
puts &quot;Number of guests eating peanut M&amp;amp;Ms:&quot;&lt;br /&gt;
puts peanut_guest_count&lt;/p&gt;
&lt;p&gt;# How many people are coming?&lt;br /&gt;
# 17&lt;br /&gt;
# Number of guests eating peanut M&amp;amp;Ms:&lt;br /&gt;
# 7&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;You can see that Guest.all is much more intent revealing than manipulating a 2D array by hand.&lt;/p&gt;
&lt;/pre&gt;&lt;/pre&gt;
</description>
        <pubDate>Sun, 16 Jun 2013 13:40:44 -0400</pubDate>
        <link>http://squarism.com//2013/06/16/the-best-way-to-read-csv-in-ruby/</link>
        <guid isPermaLink="true">http://squarism.com//2013/06/16/the-best-way-to-read-csv-in-ruby/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Rails Dev Shops in Washington DC</title>
        <description>&lt;style type=&quot;text/css&quot;&gt;
.shops {&lt;br /&gt;
  margin-bottom: 4em;&lt;br /&gt;
}&lt;br /&gt;
.shops td {&lt;br /&gt;
  padding: 1em;&lt;br /&gt;
}&lt;br /&gt;
.shops tr td:nth-child(2) {&lt;br /&gt;
  width: 25%;&lt;br /&gt;
  border-right: 1px solid #ddd;&lt;br /&gt;
}&lt;br /&gt;
&lt;/style&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/uploads/2013/05/pixel-ribbon_copper_leaf_hotel_lobby.png&quot; alt=&quot;pixel-ribbon_copper_leaf_hotel_lobby&quot; width=&quot;576&quot; height=&quot;24&quot; class=&quot;aligncenter size-full wp-image-1968&quot; /&gt;&lt;/p&gt;
&lt;p&gt;What shops, companies, consultants, startups or other folks are using Ruby or Rails (on any level)?  Contact me on twitter if you want to be added or you have corrections: &lt;a href=&quot;https://twitter.com/squarism&quot;&gt;@squarism&lt;/a&gt; or leave a comment below.&lt;/p&gt;
&lt;table width=&quot;100%&quot; class=&quot;shops&quot;&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;img src=&quot;/uploads/2013/05/rails_dev_shops_radiant-e1367684038894.png&quot; alt=&quot;rails_dev_shops_radiant&quot; width=&quot;150&quot; height=&quot;37&quot; class=&quot;aligncenter size-full wp-image-1945&quot; /&gt;&lt;br /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://radiantcms.org/&quot;&gt;Radiant CMS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Radiant is a no-fluff, open source content management system designed for small teams.&lt;/em&gt;&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;img src=&quot;/uploads/2013/05/rails_dev_shops_triple_dog_dare-e1367684106998.png&quot; alt=&quot;rails_dev_shops_triple_dog_dare&quot; width=&quot;150&quot; height=&quot;40&quot; class=&quot;aligncenter size-full wp-image-1963&quot; /&gt;&lt;br /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://tripledogdare.net/&quot;&gt;Triple Dog Dare&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Has your Rails (or Ruby) project gone off of the tracks? Did you outsource your work on the cheap only to find that your application is bug-ridden and slow?  I can help make it better. Wrangling chaos is one of my specialities.&lt;/em&gt;&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;img src=&quot;/uploads/2013/05/rails_dev_shops_intridea.png&quot; alt=&quot;rails_dev_shops_intridea&quot; width=&quot;151&quot; height=&quot;51&quot; class=&quot;aligncenter size-large wp-image-1946&quot; /&gt;&lt;br /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.intridea.com/&quot;&gt;Intridea&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;We don&#39;t just make web apps - we solve problems. At Intridea we write intelligently designed software to help businesses develop strategic solutions and launch new ideas.&lt;/em&gt;&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;img src=&quot;/uploads/2013/05/rails_dev_shops_codesherpas.png&quot; alt=&quot;rails_dev_shops_codesherpas&quot; width=&quot;168&quot; height=&quot;109&quot; class=&quot;aligncenter size-large wp-image-1947&quot; /&gt;&lt;br /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.codesherpas.com/&quot;&gt;Code Sherpas&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;CodeSherpas is a full life-cycle software development and design firm based in Reston, VA.&lt;/em&gt;&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;img src=&quot;/uploads/2013/05/rails_dev_shops_livingsocial.png&quot; alt=&quot;rails_dev_shops_livingsocial&quot; width=&quot;179&quot; height=&quot;69&quot; class=&quot;aligncenter size-full wp-image-1943&quot; /&gt;&lt;br /&gt;
&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://livingsocial.com/&quot;&gt;Living Social&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;LivingSocial is a deal-of-the-day website that features discounted gift certificates usable at local or national companies. Based in Washington, D.C., LivingSocial now has more than 70 million members around the world.&lt;/em&gt;&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/uploads/2013/05/rails_dev_shops_bloomberg.png&quot; alt=&quot;rails_dev_shops_bloomberg&quot; width=&quot;132&quot; height=&quot;33&quot; class=&quot;aligncenter size-large wp-image-1944&quot; /&gt;&lt;br /&gt;
&lt;/td&gt;
&lt;td&gt;Bloomberg&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Bloomberg, the global business and financial information and news leader, gives influential decision makers a critical edge by connecting them to a dynamic network of information, people and ideas.&lt;/em&gt;&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/uploads/2013/05/rails_dev_shops_monkeysee.jpg&quot; alt=&quot;rails_dev_shops_monkeysee&quot; width=&quot;150&quot; height=&quot;45&quot; class=&quot;aligncenter size-full wp-image-1965&quot; /&gt;&lt;/td&gt;
&lt;td&gt;Monkeysee.com&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Monkey See captures the skill and knowledge of the world&#39;s top experts and delivers it to inquisitive audiences everywhere.&lt;/em&gt;&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Gannett&lt;/td&gt;
&lt;td&gt;&lt;em&gt;???&lt;/em&gt;&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Comcast&lt;/td&gt;
&lt;td&gt;&lt;em&gt;???&lt;/em&gt;&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Sprint&lt;/td&gt;
&lt;td&gt;&lt;em&gt;???&lt;/em&gt;&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/table&gt;
</description>
        <pubDate>Sun, 09 Jun 2013 23:44:45 -0400</pubDate>
        <link>http://squarism.com//2013/06/09/rails-dev-shops-in-washington-dc/</link>
        <guid isPermaLink="true">http://squarism.com//2013/06/09/rails-dev-shops-in-washington-dc/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>The Supermodel Ruby Gem Loses Data</title>
        <description>&lt;p&gt;&lt;img src=&quot;/uploads/2013/05/pixel-ribbon_northface.png&quot; alt=&quot;pixel-ribbon_northface&quot; width=&quot;576&quot; height=&quot;24&quot; class=&quot;aligncenter size-full wp-image-2005&quot; /&gt;&lt;br /&gt;
Actually no.&lt;/p&gt;
&lt;p&gt;I love &lt;a href=&quot;https://github.com/maccman/supermodel&quot;&gt;Supermodel&lt;/a&gt;.  It might be overcome by ActiveModel::Model in Rails 4 but until then Supermodel is a fantastic in-memory database for Ruby that has a lot of advantages over using just a plain hash or trying to roll your own.&lt;/p&gt;
&lt;p&gt;However using it with a large amount of data, we noticed it loses data.  Sometimes, a few records.  Other times, a few more.  It was really random.  We were confused.  Looking at the docs, this is the default class maccman has in his README.&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
class Test &amp;lt; SuperModel::Base&lt;br /&gt;
end&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;That works no problem.  We looked at the IDs that it uses and saw that it&#39;s using the Ruby ObjectID which is about 14 digits long.&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
#&amp;lt;Test:0x007f80e41dbd18 @new_record=false, @attributes={&quot;bacon&quot;=&amp;gt;&quot;tasty&quot;,&lt;br /&gt;
 &quot;id&quot;=&amp;gt;70095779847820}, @changed_attributes={}, @validation_context=nil,&lt;br /&gt;
@errors={}, @previously_changed={&quot;bacon&quot;=&amp;gt;[nil, &quot;tasty&quot;]}&amp;gt;&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;Ok, that ID of 70095779847820 seems good enough right?  Let&#39;s see!&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
require &#39;supermodel&#39;
&lt;p&gt;class FancyPants &amp;lt; SuperModel::Base&lt;br /&gt;
end&lt;/p&gt;
&lt;p&gt;# create one thousand pairs of fancy pants&lt;br /&gt;
1_000.times {&lt;br /&gt;
  FancyPants.create(glitter: true)&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;raise &quot;Nooo!  My fancy pants!&quot; if FancyPants.count &amp;lt; 1_000&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;Run it.&lt;/p&gt;
&lt;pre&gt;
RuntimeError: Nooo! My fancy pants!&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;What.&lt;/p&gt;
&lt;p&gt;Well.  I&#39;m no expert but I bet the object_ids in ruby aren&#39;t very random.  I would hope they wouldn&#39;t be.  Because you&#39;re creating objects all the time right?  Ruby is slow enough without some super accurate id field.  Should we abandon all hope and scatter our dreams in despair?  Nope.&lt;/p&gt;
&lt;p&gt;Supermodel has a documented solution for this.  Just add this mixin into your class.&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
include SuperModel::RandomID&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;This will make the IDs more random and you&#39;ll find 1,000 pairs of fancy pants in your class.  The odd ball thing for me was realizing that supermodel &#39;loses data&#39;.  But it doesn&#39;t.  IMHO, this mixin should probably be the default.  I find Supermodel an awesome quick and dirty database but a database shouldn&#39;t lose records silently.&lt;/p&gt;
&lt;p&gt;I still love Supermodel.  I&#39;ve played around with other in memory databases such as Rails3, Rails4, sqlite3 with datamapper and Supermodel works like I want it to.&lt;/p&gt;
&lt;/pre&gt;
</description>
        <pubDate>Sun, 02 Jun 2013 22:42:08 -0400</pubDate>
        <link>http://squarism.com//2013/06/02/the-supermodel-ruby-gem-loses-data/</link>
        <guid isPermaLink="true">http://squarism.com//2013/06/02/the-supermodel-ruby-gem-loses-data/</guid>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Super Interesting Talks from RubyConf 2012</title>
        <description>&lt;p&gt;&lt;img src=&quot;/uploads/2013/05/pixel-ribbon_chem.png&quot; alt=&quot;pixel-ribbon_chem&quot; width=&quot;576&quot; height=&quot;24&quot; class=&quot;aligncenter size-full wp-image-1999&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Trying to summarize someone&#39;s 30-60minute talk is really hard.  So apologies go out to anyone I&#39;m trying to paraphrase here.  I took it upon myself to watch every single video from &lt;a href=&quot;http://www.confreaks.com/events/rubyconf2012?sort=post&quot;&gt;RubyConf 2012&lt;/a&gt; which started airing in November.  It&#39;s May now.  There&#39;s a lot of content there and you can&#39;t just slurp it down and expect to process it all.  So I thought I&#39;d leave little breadcrumbs to myself noting which things were super interesting to me.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1291-rubyconf2012-real-time-salami&quot;&gt;Real Time Salami - Aaron Patterson&lt;/a&gt;&lt;br /&gt;
Any presentation by @tenderlove is great and this one was fun and interesting as expected.  Aaron talks about parallelism, streaming and making Salami (actual salami).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1284-rubyconf2012-tokaido-making-ruby-better-on-osx&quot;&gt;Tokaido: Making Ruby Better on OSX - Yehuda Katz&lt;/a&gt;&lt;br /&gt;
This was an exciting talk about Tokaido which is a work in progress to make a Rails.app one-click super-easy dev tool for Mac.  He talks about other platforms too, don&#39;t worry.  This talk really makes you appreciate how hard this problem is.  There are some super interesting low-level OSX details in there.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1281-rubyconf2012-why-jruby-works&quot;&gt;Why JRuby Works - Charles Nutter, Thomas Enebo&lt;/a&gt;&lt;br /&gt;
This was a great talk about JRuby and was very convincing presentation.  Since watching it, I&#39;ve been playing with Torquebox and JRuby.  Unfortunately the audio and video are a bit weird.  For me, I loved the part about garbage collection.  It was a great summary about how good the JVM is at garbage collection.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1279-rubyconf2012-zero-downtime-deploys-made-easy&quot;&gt;Zero Downtime Deploys Made Easy - Matt Duncan&lt;/a&gt;&lt;br /&gt;
This talk was great.  Matt walks through all the problems you will encounter when trying to reach a large number of nines.  He covers a lot of gotchas, like &quot;whoops that database migration locks the entire table and just took your site down&quot;.  He covers how Yammer does database changes, managing job queues and external services when you are trying to keep uptime at maximum.  This was definitely an eye opening talk.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1287-rubyconf2012-y-not-adventures-in-functional-programming&quot;&gt;Y Not -- Adventures in Functional Programming - Jim Weirich&lt;/a&gt;&lt;br /&gt;
OMG.  This talk left my brain on the floor.  I can&#39;t really explain how awesome Jim (he wrote rake) is.  If you want to see the best live coding I&#39;ve ever seen and learn about the y-combinator, watch it.  I didn&#39;t follow along 100% but I was blown away.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1302-rubyconf2012-the-celluloid-ecosystem&quot;&gt;The Celluloid Ecosystem - Tony Arcieri&lt;/a&gt;&lt;br /&gt;
This was a great intro into everything surrounding the celluloid gems.  More importantly though, it was a _reference_ concurrency state of the union talk.  If you want to learn why the actor model is the way to go (in Ruby or Scala actually) then watch it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1288-rubyconf2012-ruby-vs-the-world&quot;&gt;Ruby vs. the world -  Matt Aimonetti&lt;/a&gt;&lt;br /&gt;
A great overview of languages other than Ruby.  His starting point about the Sapir-Whorf Hypothesis - that language influences thought is a great opening to this talk.  Matt chooses really interesting topics and does a good job.  He covers Clojure, Scala and Go.  This is a great talk if you don&#39;t know what any of those are or want a quick &#39;Rosetta Stone&#39;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1282-rubyconf2012-your-app-is-not-a-black-box&quot;&gt;Your app is not a black box - Josh Kalderimis&lt;/a&gt;&lt;br /&gt;
This talk is easy to watch.  He does a great job of keeping it interesting.  It&#39;s basically a talk about DevOps but more importantly about tooling.  I found this talk very interesting from an ops, polish and motivation.  Please watch this.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1292-rubyconf2012-how-to-build-use-and-grow-internal-tools&quot;&gt;How to build, use and grow internal tools - Keavy McMinn&lt;/a&gt;&lt;br /&gt;
One of my favorites.  I forwarded to a bunch of people.  Github is worth emulating and Keavy shares insight about tools, culture and teams.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1290-rubyconf2012-asynchronous-processing-for-fun-and-profit&quot;&gt;Asynchronous Processing for Fun and Profit - Mike Perham&lt;/a&gt;&lt;br /&gt;
A great talk about sidekiq vs redis from the authority on sidekiq.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1295-rubyconf2012-change-your-tools-change-your-outcome-the-next-frontier-of-deployment&quot;&gt;Change your tools, change your outcome - Dr. Nic Williams&lt;/a&gt;&lt;br /&gt;
Dr. Nic nailed this talk.  Some NSFW language.  Hilarious and interesting talk about getting over nice to haves (like fast MRI spin-up time) and making your app more awesome for Ops people.  Super great talk.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1289-rubyconf2012-grow-your-unix-beard-using-ruby&quot;&gt;Grow Your Unix Beard Using Ruby - Jesse Storimer&lt;/a&gt;&lt;br /&gt;
A reference talk all about Unix.  I found this very educational even though I consider myself pretty unix savvy.  Jesse is great, he has a book on pragprog.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1314-rubyconf2012-boundaries&quot;&gt;Boundaries - Gary Bernhardt&lt;/a&gt;&lt;br /&gt;
Amazing talk by destroyallsoftware&#39;s Gary.  He talks about an imperative shell vs a functional core which is all the rage right now.  Gary is brilliant.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1270-rubyconf2012-abstracting-features-into-custom-reverse-proxies-or-making-better-lemonade-from-chaos&quot;&gt;Abstracting Features Into Custom Reverse Proxies - Nick Muerdter&lt;/a&gt;&lt;br /&gt;
Some great ideas about reverse proxies.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.confreaks.com/videos/1273-rubyconf2012-service-oriented-architecture-at-square&quot;&gt;Service Oriented Architecture at Square - Chris Hunt&lt;/a&gt;&lt;br /&gt;
Chris walks you through creating a web service like they do at square as if you were working there.  He introduced some amazing open source libraries from square that I need to check out (cane, fdoc, jetpack).  For example, they use jetpack to auto-pack up and deploy a rails app with Jetty.  So all you need is a JVM.&lt;/p&gt;
&lt;p&gt;I&#39;m pretty sure I picked more than half of the talks as ones that I found super interesting.  There were many more but I can&#39;t just pick everything.  It takes a while to watch all these videos but they are worth your time.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 May 2013 21:48:17 -0400</pubDate>
        <link>http://squarism.com//2013/05/28/super-interesting-talks-from-rubyconf-2012/</link>
        <guid isPermaLink="true">http://squarism.com//2013/05/28/super-interesting-talks-from-rubyconf-2012/</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Using a Redis as a Database</title>
        <description>&lt;p&gt;&lt;img src=&quot;/uploads/2013/05/pixel-ribbon_cor.png&quot; alt=&quot;pixel-ribbon_cor&quot; width=&quot;576&quot; height=&quot;24&quot; class=&quot;aligncenter size-full wp-image-1971&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;The Spike&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
I was spiking on Redis recently.  I wanted to use the &lt;a href=&quot;https://github.com/nateware/redis-objects&quot;&gt;redis-objects gem&lt;/a&gt; to simulate a shopping cart app even though the README specifically says&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Just use MySQL, k?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I wanted to see what would happen if I tried it anyway.  So the README and examples for the redis-objects gem are great so I&#39;m not going to rehash what&#39;s there.  However, I will say though that the example has you hardcode the id field to 1.  That detail snuck up on me.&lt;/p&gt;
&lt;p&gt;If you don&#39;t set an ID then you can&#39;t work with a redis-object instance.  You get an exception: &lt;code&gt;Redis::Objects::NilObjectId: Attempt to address redis-object :name on class User with nil id (unsaved record?)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It&#39;s basically trying to tell you, &quot;hey, save the record first or set an ID&quot;.  Well, honestly, I don&#39;t want to set an id myself.  This is where the meat of the README is.  Redis-objects really fits organically in an existing ActiveRecord model.  That means Rails.  In this case though, I don&#39;t want an entire Rails app.  I can see the value though in a plain old Rails app.  Just look at the examples if you want to see more.&lt;/p&gt;
&lt;p&gt;Anyway, continuing on with the spiking, I tried to integrate the Supermodel gem with Redis-objects.  That sort of worked.  You just &lt;code&gt;class User &amp;lt; Supermodel::Base&lt;/code&gt; and you can sort of get it to work.  This is great because Supermodel gives you finders like &lt;code&gt;User.find_by_email(&#39;bob@yahoo.com&#39;)&lt;/code&gt; to make it act like ActiveRecord but you can&#39;t use &lt;code&gt;.create(email: &#39;bob@yahoo.com&#39;)&lt;/code&gt; to begin with because of the same errors as I mentioned above.  Redis-objects really wants the record to have an ID already.  Even using Supermodel&#39;s RandomID mixin didn&#39;t work.  The initialize order and callback hooks don&#39;t really work (or at least I couldn&#39;t get them to work).&lt;/p&gt;
&lt;p&gt;Finally, I tried combining just redis-objects and datamapper redis.  That worked.  And it&#39;s pretty nice.  Check it out.&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
require &#39;redis-objects&#39;&lt;br /&gt;
require &#39;dm-core&#39;&lt;br /&gt;
require &#39;dm-redis-adapter&#39;
&lt;p&gt;DataMapper.setup(:default, {:adapter  =&amp;gt; &quot;redis&quot;})&lt;/p&gt;
&lt;p&gt;# you would move this to a common location&lt;br /&gt;
Redis.current = Redis.new(:host =&amp;gt; &#39;127.0.0.1&#39;, :port =&amp;gt; 6379)&lt;/p&gt;
&lt;p&gt;class User&lt;br /&gt;
  include Redis::Objects&lt;br /&gt;
  include DataMapper::Resource&lt;/p&gt;
&lt;p&gt;  # datamapper fields, just used for .create&lt;br /&gt;
  property :id, Serial&lt;br /&gt;
  property :email, String&lt;/p&gt;
&lt;p&gt;  # use redis-objects fields for everything else&lt;br /&gt;
  value :disabled&lt;br /&gt;
  value :name&lt;br /&gt;
  list :cart, :marshal =&amp;gt; true&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;# absolutely need this line for dm-redis&lt;br /&gt;
User.finalize&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;So using this is pretty easy.&lt;/p&gt;
&lt;pre lang=&quot;ruby&quot;&gt;
u = User.create(email: &#39;test@test.com&#39;)&lt;br /&gt;
u.name = &#39;Testy McTesterson&#39;&lt;br /&gt;
&lt;/pre&gt;
&lt;p&gt;When you look at Redis, the keys are already composited for you and magic has happened.&lt;/p&gt;
&lt;pre lang=&quot;reg&quot;&gt;
redis 127.0.0.1:6379&amp;gt; keys *&lt;br /&gt;
user:test@test.com:name
&lt;p&gt;redis 127.0.0.1:6379&amp;gt; get user:test@test.com:name&lt;br /&gt;
Testy McTesterson&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;Yay!&lt;/p&gt;
&lt;p&gt;The name field is from redis-objects and the create uses datamapper.  This is a really odd pairing but I like the fact that I have no sql database in the mix but still have finders similar to an ORM.  Something to keep in mind, datamapper&#39;s finders are a bit different than the Rails 3 ones (no .where method).&lt;/p&gt;
&lt;h2&gt;Benchmarking A Million Things&lt;/h2&gt;&lt;br /&gt;
Ok fine.  So maybe this works, maybe it doesn&#39;t.  Maybe it&#39;s not the right idea.  What about the good stuff?  Like, how fast can we load a whole lot of names into MySQL versus Redis using  the above code and techniques?  Is it even relevant?
&lt;pre lang=&quot;reg&quot;&gt;
Summary&lt;br /&gt;
-------------------------------------------------------------------------------&lt;br /&gt;
(PL = pipelined redis operation)
&lt;p&gt;Loading one million random names (full names) like John Smith, Patty Gerbee Sr)&lt;br /&gt;
MySQL:                   06:05&lt;br /&gt;
Redis:                   02:45&lt;br /&gt;
Redis C ext              01:32&lt;br /&gt;
Redis pipelined:         00:56&lt;br /&gt;
Redis pipelined C ext:   00:19&lt;br /&gt;
Ruby just loading array: 387ms&lt;/p&gt;
&lt;p&gt;Loading 10k ecommerce-style data (orders, users, products)&lt;br /&gt;
MySQL:    00:09.40&lt;br /&gt;
Redis:    00:14.50&lt;br /&gt;
Redis PL: 00:02.72&lt;br /&gt;
&lt;br /&gt;
A gist of these &lt;a href=&quot;https://gist.github.com/squarism/5234519&quot;&gt;test results is here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;A More Complete Example&lt;/h2&gt;&lt;br /&gt;
If you know the ID and don&#39;t need something like an auto-incrementing column outside your code/control then you can greatly simplify the code above by getting rid of Datamapper.  You can simply use redis-objects to fake an ORM.  I had great success using it as long as you &lt;em&gt;USE NATIVE REDIS TYPES&lt;/em&gt;.  Listen to the redis-objects author, don&#39;t try to force the tool into the use case.
&lt;pre lang=&quot;ruby&quot;&gt;
# What if we want to use redis-objects as a database but&lt;br /&gt;
# try to stick with native redis objects?&lt;br /&gt;
#&lt;br /&gt;
# For example, Supermodel is a great gem but using the Redis&lt;br /&gt;
# mixin causes Supermodel to serialize to JSON strings in Redis&lt;br /&gt;
# which is going to kill performance.  You have to model your&lt;br /&gt;
# problem using native Redis objects to keep the speed up.&lt;br /&gt;
#&lt;br /&gt;
# At the same time, I miss the finders from ActiveModel&lt;br /&gt;
# like: Person.find(&#39;Joe&#39;)&lt;br /&gt;
# Supermodel does give you those finders so you will feel right at&lt;br /&gt;
# home coming from Rails.  I tried using ActiveModel mixins with&lt;br /&gt;
# redis-objects but it didn&#39;t work for me.&lt;br /&gt;
#&lt;br /&gt;
# I found the below a nice compromise but it requires a lot of&lt;br /&gt;
# custom methods.  :(
&lt;p&gt;require &#39;redis-objects&#39;&lt;/p&gt;
&lt;p&gt;class Person&lt;br /&gt;
  attr_reader :name&lt;br /&gt;
  alias :id :name&lt;/p&gt;
&lt;p&gt;  include Redis::Objects&lt;/p&gt;
&lt;p&gt;  def initialize name&lt;br /&gt;
    @name = name&lt;br /&gt;
  end&lt;/p&gt;
&lt;p&gt;  def self.exists? name&lt;br /&gt;
    # Here&#39;s a big assumption, if the id attribute exists, the entire&lt;br /&gt;
    # object exists.  This might not work for your problem.&lt;br /&gt;
    self.redis.exists &quot;name:{#name}:id&quot;&lt;br /&gt;
  end&lt;/p&gt;
&lt;p&gt;  def self.find name&lt;br /&gt;
    # new behaves like find when a record exists, so this works like&lt;br /&gt;
    # find_or_create()&lt;br /&gt;
    self.new name&lt;br /&gt;
  end&lt;/p&gt;
&lt;p&gt;  # native redis attributes with redis-objects&lt;br /&gt;
  value :age&lt;br /&gt;
  list :favorite_foods&lt;br /&gt;
end&lt;/p&gt;
&lt;p&gt;# example usage&lt;/p&gt;
&lt;p&gt;joe = Person.new &#39;Joe&#39;&lt;br /&gt;
joe.age = 34&lt;br /&gt;
joe.favorite_foods &amp;lt;&amp;lt; [&#39;cake&#39;, &#39;pie&#39;]  # it will flatten arrays, don&#39;t worry&lt;br /&gt;
joe.favorite_foods &amp;lt;&amp;lt; &#39;bacon&#39;          # or you can do this&lt;/p&gt;
&lt;p&gt;Person.find(&#39;Joe&#39;).age = 56&lt;/p&gt;
&lt;p&gt;# find and initialize&lt;br /&gt;
Person.find(&#39;Stan&#39;).age = 21&lt;/p&gt;
&lt;p&gt;# you cannot just .favorite_foods = [&#39;Steak]&#39; because that&#39;s not how native&lt;br /&gt;
# Redis objects work&lt;br /&gt;
Person.find(&#39;Stan&#39;).favorite_foods &amp;lt;&amp;lt; &#39;Steak&#39;&lt;/p&gt;
&lt;p&gt;# deleting a field&lt;br /&gt;
Person.find(&#39;Stan&#39;).favorite_foods.del  # notice it&#39;s .del and not .delete (del is the redis cmd)&lt;br /&gt;
&lt;/p&gt;
&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 04 May 2013 11:37:43 -0400</pubDate>
        <link>http://squarism.com//2013/05/04/using-redis-as-a-database/</link>
        <guid isPermaLink="true">http://squarism.com//2013/05/04/using-redis-as-a-database/</guid>
        
        
        <category>development</category>
        
        <category>ruby</category>
        
      </item>
    
  </channel>
</rss>
